name: every push health check

on:
  pull_request:
    branches:
      - develop
      - master

jobs:
  healthcheck:
    name: Check workable app
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: lomaya_baryery_db_local
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    -
      name: Check out the repo
      uses: actions/checkout@v3
    -
      name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - 
      name: Install and configure Poetry
      uses: snok/install-poetry@v1
    -
      name: Install Dependencies
      run: |
        python -V
        poetry config virtualenvs.in-project true
        poetry install
    -
      name: Alembic Upgrade
      run: poetry run alembic upgrade head
    - 
      name: Create .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ env.DEPLOY_PATH }}
            rm -f .env
            touch .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} >> .env
            echo BOT_WEBHOOK_MODE=${{ secrets.BOT_WEBHOOK_MODE }} >> .env
            echo APPLICATION_URL=${{ secrets.APPLICATION_URL }} >> .env
            echo SEND_NEW_TASK_HOUR=${{ secrets.SEND_NEW_TASK_HOUR }} >> .env
            echo SEND_NO_REPORT_REMINDER_HOUR=${{ secrets.SEND_NO_REPORT_REMINDER_HOUR }} >> .env
            echo MIN_AGE=${{ secrets.MIN_AGE }} >> .env
            echo HEALTHCHECK_API_URL=${{ secrets.HEALTHCHECK_API_URL }} >> .env
    -
      name: Run Local project
      run: poetry run python run.py
    - 
      name: Get the status of healthcheck
      uses: im-open/url-status-check@v1.1.0
      with:
        url: 'http://localhost:8080/healthcheck'
        fail-on-bad-status: true
      
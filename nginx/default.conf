proxy_cache_path cache/ keys_zone=auth_cache:10m;

server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    server_name ${APPLICATION_URL};

    # Обходим падение swag если сервис frontend не поднят в той же сети
    set $frontend "http://frontend";

    location /api/(docs|redoc|openapi.json) {
        proxy_pass http://backend:8000/;
    }

    location /api {
        return 302 /api/;
    }

    location /api/ {
        proxy_pass http://backend:8000/;
        proxy_set_header   Host                 $host;
        proxy_set_header   X-Real-IP            $remote_addr;
        proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto    $scheme;
    }

    location / {
        resolver 127.0.0.11
        root /var/html/;
        proxy_pass $frontend;
        # Если фронта нет - идем на запасной путь
        error_page 502 = @fallback;
    }

    location @fallback {
        proxy_pass http://backend:8000;
    }

    location /static {
        root /var/html/;
    }

    location /static/tasks {
        alias /var/static/tasks/;
    }

    location /static/user_reports/ {
    # Подключается проверка авторизации, пускает только после получения статуса 200
    #    auth_request /auth;
    #    auth_request_set $auth_status $upstream_status;
        alias /var/static/user_reports/;
        error_page 401 = @unauthorized;
    }

    location @unauthorized {
        default_type "";
        return 401 '{"detail": "Необходима авторизация"}';
        add_header Content-Type "application/json" always;
    }

    # Здесь указывается сервис для проверки авторизации администратора/психолога
    # location = /auth {
    #     internal;
    #     proxy_pass              http://backend:8000/administrators/is_authenticated;
    #     proxy_pass_request_body off;
    #     proxy_set_header        Content-Length "";
    #     proxy_set_header        X-Original-URI $request_uri;
    #     proxy_cache             auth_cache;
    #     proxy_cache_key         "$http_authorization$request_uri";
    # }


    # deny access to .htaccess/.htpasswd files
    location ~ /\.ht {
        deny all;
    }
}
